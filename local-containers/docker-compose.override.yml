services:

  nodejs:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-nodejs:${VERSION:-latest}
    build:
      context: ./docker/build/nodejs
      args:
        PARENT_IMAGE: ${NODEJS_PARENT_IMAGE}
        NODEJS_VERSION: ${NODEJS_VERSION}
    deploy:
      replicas: 0

  sugcon2024:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-sugcon2024:${VERSION:-latest}
    build:
      context: ../
      dockerfile: ./local-containers/docker/build/sugcon/Dockerfile
      target: ${BUILD_CONFIGURATION}
      args:
        PARENT_IMAGE: ${REGISTRY}${COMPOSE_PROJECT_NAME}-nodejs:${VERSION:-latest}
    volumes:
      - ..\headapps\Sugcon2024:C:\app
    environment:
      SITECORE_API_HOST: "http://cm"
      NEXTJS_DIST_DIR: ".next-container"
      PUBLIC_URL: "https://${SUGCON_EU_HOST}"
      JSS_EDITING_SECRET: ${JSS_EDITING_SECRET}
      SITECORE_API_KEY: "${SITECORE_API_KEY}"
      FETCH_WITH: "GraphQL"
      NEXT_PUBLIC_CDP_CLIENT_KEY: ${SUCGON_EU_CDP_CLIENT_KEY}
      NEXT_PUBLIC_CDP_TARGET_URL: ${SUCGON_EU_CDP_TARGET_URL}
      NEXT_PUBLIC_CDP_POINTOFSALE: ${SUCGON_EU_CDP_POINTOFSALE}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - cm
      - nodejs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sugconevents-secure.entrypoints=websecure"
      - "traefik.http.routers.sugconevents-secure.tls=true"
      - "traefik.http.routers.sugconevents-secure.rule=Host(`${SUGCON_EVENTS_HOST}`)"
      - "traefik.http.routers.sugconeu-secure.entrypoints=websecure"
      - "traefik.http.routers.sugconeu-secure.tls=true"
      - "traefik.http.routers.sugconeu-secure.rule=Host(`${SUGCON_EU_HOST}`)"
      - "traefik.http.routers.sugconanz-secure.entrypoints=websecure"
      - "traefik.http.routers.sugconanz-secure.tls=true"  
      - "traefik.http.routers.sugconanz-secure.rule=Host(`${SUGCON_ANZ_HOST}`)"
      - "traefik.http.routers.sugconindia-secure.entrypoints=websecure"
      - "traefik.http.routers.sugconindia-secure.tls=true"  
      - "traefik.http.routers.sugconindia-secure.rule=Host(`${SUGCON_INDIA_HOST}`)"
      - "traefik.http.routers.sugonna-secure.entrypoints=websecure"
      - "traefik.http.routers.sugonna-secure.tls=true"  
      - "traefik.http.routers.sugonna-secure.rule=Host(`${SUGCON_NA_HOST}`)"
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/healthz"]
      interval: 60s
      timeout: 30s

  # Container used to run the MVP Rendering host.
  mvp-rendering:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-mvp-rendering:${VERSION:-latest}
    restart: ${DOCKER_RESTART}
    build:
      context: ../
      dockerfile: ./local-containers/docker/build/mvp/Dockerfile
      args:
        BASE_IMAGE: ${NETCORE_BUILD_IMAGE}
        PROJECT_FILE: ./headapps/MvpSite/MvpSite.Rendering/MvpSite.Rendering.csproj
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://*:80"
      DOTNET_WATCH_RESTART_ON_RUDE_EDIT: true
      DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER: true
      MVP_RENDERING_EDITING_HOST_URI: "${RENDERING_HOST_INTERNAL_URI}"
      Sitecore__InstanceUri: "http://cm"
      Sitecore__LayoutServicePath: "/sitecore/api/graph/edge"
      Sitecore__ExperienceEdgeToken: "{E2F3D43E-B1FD-495E-B4B1-84579892422A}"
      Sitecore__RenderingHostUri: "https://${MVP_RENDERING_HOST}"
      Sitecore__EnableExperienceEditor: "true" 
      Sitecore__JssEditingSecret: ${JSS_EDITING_SECRET}
      Okta__OktaDomain: ${OKTA_DOMAIN}
      Okta__ClientId: ${OKTA_CLIENT_ID}
      Okta__ClientSecret: ${OKTA_CLIENT_SECRET}
      Okta__AuthorizationServerId: ${OKTA_AUTH_SERVER_ID}
      MvpSelectionsApiClient__BaseAddress: ${MVP_SELECTIONS_API}
    ports:
      - "80:80"
    command: ["dotnet", "watch", "run", -v, "--urls", "http://*:80"]
    volumes:
      - .\..\headapps\MvpSite:c:\app
      - c:\app\MvpSite.Rendering\obj
      - c:\app\MvpSite.Rendering\bin
    depends_on:
      - cm
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mvp-secure.entrypoints=websecure"
      - "traefik.http.routers.mvp-secure.rule=Host(`${MVP_RENDERING_HOST}`)"
      - "traefik.http.routers.mvp-secure.tls=true"   
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      interval: 60s
      timeout: 30s


  # Mount the Traefik configuration and certs.
  traefik:
    volumes:
      - ./docker/traefik:C:/etc/traefik
    depends_on:
      - cm

  # Mount our SQL data folder and use our custom image with the Headless Services (JSS)
  # module data added. See Dockerfile for details.
  mssql:
    volumes:
      - type: bind
        source: .\docker\data\sql
        target: c:\data

  # Mount our Solr data folder and use our retagged Solr image.
  # Some modules (like SXA) also require additions to the Solr image.
  solr:
    volumes:
      - type: bind
        source: .\docker\data\solr
        target: c:\data

  # Use our custom CM image with added modules and solution code.
  # Folders are mounted below for code deployment and log output. See Dockerfile for details.
  # Configure for a mounted license file instead of using SITECORE_LICENSE.
  cm:
    image: ${REGISTRY}${COMPOSE_PROJECT_NAME}-xmcloud-cm:${VERSION:-latest}
    build:
      context: ../
      dockerfile: ./local-containers/docker/build/cm/Dockerfile
      args:
        PARENT_IMAGE: ${SITECORE_DOCKER_REGISTRY}sitecore-xmcloud-cm:${SITECORE_VERSION}
        TOOLS_IMAGE: ${TOOLS_IMAGE}:${SITECORE_VERSION}
    volumes:
      - ${LOCAL_DEPLOY_PATH}\platform:C:\deploy
      - ${LOCAL_DATA_PATH}\cm:C:\inetpub\wwwroot\App_Data\logs
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      Sitecore__ExternalCdUrl: "${CM_HOST}"
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      SITECORE_JSS_EDITING_SECRET: ${JSS_EDITING_SECRET}
      SITECORE_Pages_Client_Host: ${SITECORE_Pages_Client_Host}
      SITECORE_Pages_CORS_Allowed_Origins: ${SITECORE_Pages_CORS_Allowed_Origins}
      SITECORE_GraphQL_CORS: ${SITECORE_GRAPHQL_CORS}
      ## MVP Rendering Host
      MVP_RENDERING_HOST_PUBLIC_URI: "https://${MVP_RENDERING_HOST}"
      ## Development Environment Optimizations
      SITECORE_DEVELOPMENT_PATCHES: DevEnvOn,CustomErrorsOff,DebugOn,DiagnosticsOff,InitMessagesOff
      Sitecore_AppSettings_exmEnabled:define: "no" # remove to turn on EXM
      MVP_RENDERING_EDITING_HOST_URI: "${RENDERING_HOST_INTERNAL_URI}/"
    entrypoint: powershell -Command "& C:/tools/entrypoints/iis/XmCloudDevelopment.ps1"