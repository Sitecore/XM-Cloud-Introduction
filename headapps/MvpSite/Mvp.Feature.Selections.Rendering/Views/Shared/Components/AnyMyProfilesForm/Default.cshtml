@using Mvp.Feature.Selections.Extensions
@using Mvp.Feature.Selections.Models.Any
@using Mvp.Selections.Domain
@model MyProfilesFormModel

<div class="mvp-fs-anymyprofilesedit col-sm-12 col-md-6 bg-white">
    <h2 asp-for="TitleLabel"></h2>
    @if (Model.Links.Count > 0)
    {
        <ul class="list-group">
            @foreach (ProfileLink link in Model.Links)
            {
                <li class="list-group-item">
                    <span class="badge badge-pill badge-info">@link.Type</span> <a href="@link.Uri" target="_blank">@link.Name</a>
                    <form method="post" class="float-right">
                        <input asp-for="RemoveProfileLinkId" type="hidden" value="@link.Id" />
                        <button type="submit" class="btn btn-danger"><i class="fa fa-trash" aria-hidden="true"></i></button>
                    </form>
                </li>
            }
        </ul>
        <br/>
    }
    @using (this.SwitchHtmlPrefix(nameof(MyProfilesFormModel)))
    {
        <form method="post">
            <input asp-for="IsEdit" type="hidden" value="true"/>
            <div class="form-group">
                <label asp-for="Name">
                    @(Model.IsEditing ? Html.Raw(Model.NameLabel?.EditableMarkup) : Model.NameLabel?.Value)
                </label>
                <span class="text-danger">*</span>
                <input asp-for="Name" class="form-control" required/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Link">
                    @(Model.IsEditing ? Html.Raw(Model.LinkLabel?.EditableMarkup) : Model.LinkLabel?.Value)
                </label>
                <span class="text-danger">*</span>
                <input asp-for="Link" class="form-control" type="url" required />
                <span asp-validation-for="Link" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Type">
                    @(Model.IsEditing ? Html.Raw(Model.TypeLabel?.EditableMarkup) : Model.TypeLabel?.Value)
                </label>
                <span class="text-danger">*</span>
                <select asp-for="Type" class="form-control" required>
                    @foreach (ProfileLinkType type in Enum.GetValues<ProfileLinkType>())
                    {
                        <option value="@type">@type</option>
                    }
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <button asp-for="SubmitLabel" type="submit" class="btn btn-primary"></button>
        </form>
    }
</div>
