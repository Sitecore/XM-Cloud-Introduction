{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "ModuleFile",
  "description": "Sitecore module definition file schema",
  "allOf": [
    {
      "title": "ModuleConfiguration",
      "type": "object",
      "description": "Defines a \"DevEx Module\" that is a Helix-like module that can contain serialized item configurations, etc.\nThis class is overridden with Serialization-specific derived versions that provide access to their module-specific settings.",
      "additionalProperties": {},
      "required": [
        "namespace"
      ],
      "properties": {
        "$schema": {
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the module. All resources in the module inherit this namespace.\nNamespaces can contain letters, numbers, dots (.), and hyphens (-).",
          "minLength": 1,
          "pattern": "^[A-Za-z0-9\\.\\-\\$\\{\\}\\(\\)]+$"
        },
        "description": {
          "type": "string",
          "description": "Description of the module, for reference/docs purposes only"
        },
        "references": {
          "type": "array",
          "description": "Names of other modules that are referenced by resources in this module. Wildcards are allowed, i.e. Foundation.*.",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "type": "string",
          "description": "Generic identifier as to where the module came from. Used internally for error messaging. Do not set in a module file; it will be ignored."
        }
      }
    },
    {
      "title": "SerializationModuleConfiguration",
      "type": "object",
      "additionalProperties": {},
      "required": [
        "namespace"
      ],
      "properties": {
        "$schema": {
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the module. All resources in the module inherit this namespace.\nNamespaces can contain letters, numbers, dots (.), and hyphens (-).",
          "minLength": 1,
          "pattern": "^[A-Za-z0-9\\.\\-\\$\\{\\}\\(\\)]+$"
        },
        "description": {
          "type": "string",
          "description": "Description of the module, for reference/docs purposes only"
        },
        "references": {
          "type": "array",
          "description": "Names of other modules that are referenced by resources in this module. Wildcards are allowed, i.e. Foundation.*.",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "type": "string",
          "description": "Generic identifier as to where the module came from. Used internally for error messaging. Do not set in a module file; it will be ignored."
        },
        "items": {
          "$ref": "#/allOf/1/definitions/SerializationModuleConfigurationItems"
        }
      },
      "definitions": {
        "SerializationModuleConfigurationItems": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "includes"
          ],
          "properties": {
            "path": {
              "type": "string"
            },
            "includes": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/allOf/1/definitions/FilesystemTreeSpec"
              }
            }
          }
        },
        "FilesystemTreeSpec": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "path",
            "name"
          ],
          "properties": {
            "path": {
              "type": "string",
              "minLength": 1
            },
            "scope": {
              "$ref": "#/allOf/1/definitions/TreeScope"
            },
            "allowedPushOperations": {
              "$ref": "#/allOf/1/definitions/AllowedPushOperations"
            },
            "rules": {
              "type": "array",
              "items": {
                "$ref": "#/allOf/1/definitions/FilesystemTreeSpecRule"
              }
            },
            "maxRelativePathLength": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "name": {
              "type": "string",
              "minLength": 1
            },
            "database": {
              "type": "string"
            }
          }
        },
        "TreeScope": {
          "type": "string",
          "description": "",
          "x-enumNames": [
            "SingleItem",
            "ItemAndChildren",
            "ItemAndDescendants",
            "DescendantsOnly"
          ],
          "enum": [
            "singleItem",
            "itemAndChildren",
            "itemAndDescendants",
            "descendantsOnly"
          ]
        },
        "AllowedPushOperations": {
          "type": "string",
          "description": "",
          "x-enumNames": [
            "CreateUpdateAndDelete",
            "CreateAndUpdate",
            "CreateOnly"
          ],
          "enum": [
            "createUpdateAndDelete",
            "createAndUpdate",
            "createOnly"
          ]
        },
        "FilesystemTreeSpecRule": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "type": "string",
              "minLength": 1,
              "pattern": "^(/.+|\\*)$"
            },
            "scope": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/allOf/1/definitions/TreeRuleScope"
                }
              ]
            },
            "allowedPushOperations": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/allOf/1/definitions/AllowedPushOperations"
                }
              ]
            },
            "alias": {
              "type": "string"
            }
          }
        },
        "TreeRuleScope": {
          "type": "string",
          "description": "",
          "x-enumNames": [
            "Ignored",
            "SingleItem",
            "ItemAndChildren",
            "ItemAndDescendants"
          ],
          "enum": [
            "ignored",
            "singleItem",
            "itemAndChildren",
            "itemAndDescendants"
          ]
        }
      }
    },
    {
      "title": "SerializationModuleConfiguration",
      "type": "object",
      "additionalProperties": {},
      "required": [
        "namespace"
      ],
      "properties": {
        "$schema": {
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "description": "The namespace of the module. All resources in the module inherit this namespace.\nNamespaces can contain letters, numbers, dots (.), and hyphens (-).",
          "minLength": 1,
          "pattern": "^[A-Za-z0-9\\.\\-\\$\\{\\}\\(\\)]+$"
        },
        "description": {
          "type": "string",
          "description": "Description of the module, for reference/docs purposes only"
        },
        "references": {
          "type": "array",
          "description": "Names of other modules that are referenced by resources in this module. Wildcards are allowed, i.e. Foundation.*.",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "type": "string",
          "description": "Generic identifier as to where the module came from. Used internally for error messaging. Do not set in a module file; it will be ignored."
        },
        "items": {
          "$ref": "#/allOf/2/definitions/SerializationModuleConfigurationItems"
        }
      },
      "definitions": {
        "SerializationModuleConfigurationItems": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "includes"
          ],
          "properties": {
            "path": {
              "type": "string"
            },
            "includes": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/allOf/2/definitions/FilesystemTreeSpec"
              }
            }
          }
        },
        "FilesystemTreeSpec": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "path",
            "name"
          ],
          "properties": {
            "path": {
              "type": "string",
              "minLength": 1
            },
            "scope": {
              "$ref": "#/allOf/2/definitions/TreeScope"
            },
            "allowedPushOperations": {
              "$ref": "#/allOf/2/definitions/AllowedPushOperations"
            },
            "rules": {
              "type": "array",
              "items": {
                "$ref": "#/allOf/2/definitions/FilesystemTreeSpecRule"
              }
            },
            "maxRelativePathLength": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "name": {
              "type": "string",
              "minLength": 1
            },
            "database": {
              "type": "string"
            }
          }
        },
        "TreeScope": {
          "type": "string",
          "description": "",
          "x-enumNames": [
            "SingleItem",
            "ItemAndChildren",
            "ItemAndDescendants",
            "DescendantsOnly"
          ],
          "enum": [
            "singleItem",
            "itemAndChildren",
            "itemAndDescendants",
            "descendantsOnly"
          ]
        },
        "AllowedPushOperations": {
          "type": "string",
          "description": "",
          "x-enumNames": [
            "CreateUpdateAndDelete",
            "CreateAndUpdate",
            "CreateOnly"
          ],
          "enum": [
            "createUpdateAndDelete",
            "createAndUpdate",
            "createOnly"
          ]
        },
        "FilesystemTreeSpecRule": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "type": "string",
              "minLength": 1,
              "pattern": "^(/.+|\\*)$"
            },
            "scope": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/allOf/2/definitions/TreeRuleScope"
                }
              ]
            },
            "allowedPushOperations": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/allOf/2/definitions/AllowedPushOperations"
                }
              ]
            },
            "alias": {
              "type": "string"
            }
          }
        },
        "TreeRuleScope": {
          "type": "string",
          "description": "",
          "x-enumNames": [
            "Ignored",
            "SingleItem",
            "ItemAndChildren",
            "ItemAndDescendants"
          ],
          "enum": [
            "ignored",
            "singleItem",
            "itemAndChildren",
            "itemAndDescendants"
          ]
        }
      }
    }
  ]
}